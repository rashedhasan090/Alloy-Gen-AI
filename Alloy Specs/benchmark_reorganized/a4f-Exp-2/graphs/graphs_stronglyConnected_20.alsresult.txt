/*
The graph is strongly connected, ie, it is possible to reach every node from every node considering edge direction.
http://mathworld.wolfram.com/StronglyConnectedDigraph.html
*/
pred stonglyConnected {
//Fixed
 all n:Node | n in n.^adj + n.^~adj 
}

/*
The graph is transitive, ie, if two nodes are connected through a third node, they also are connected directly.
http://mathworld.wolfram.com/TransitiveDigraph.html
*/
pred transitive {
 	adj.adj in adj 
}

/*======== IFF PERFECT ORACLE ===============*/
pred stonglyConnectedOK {
	all n:Node | n in n.*adj + n.*~adj
}
assert stonglyConnectedRepaired {
   stonglyConnected[]  iff stonglyConnectedOK[]
}
--------
pred transitiveOK {
	adj.adj in adj
}
assert transitiveRepaired {
    transitive[] iff transitiveOK[]
}
-
-- PerfectOracleCommands
 check stonglyConnectedRepaired expect 0
 check transitiveRepaired expect 0
pred repair_pred_1{stonglyConnected[] iff stonglyConnectedOK[] }
run repair_pred_1
assert repair_assert_1{stonglyConnected[] iff stonglyConnectedOK[] }
check repair_assert_1