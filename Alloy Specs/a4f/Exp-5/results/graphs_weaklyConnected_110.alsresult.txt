sig Node {
    adj : set Node
}

// Fix: Change "all a:Node" to "all a:Node | a not in a.^adj"
pred acyclic {
    all a:Node | a not in a.^adj
}

// Fix: Change "all n:Node | Node in n.adj" to "all n:Node | n.adj = Node"
pred complete {
    all n:Node | n.adj = Node
}

// Fix: Change "all x : Node | Node in x.adj + (~adj).x" to "all x : Node | x in x.*(adj+~adj)"
pred weaklyConnected {
    all x : Node | x in x.*(adj+~adj)
}