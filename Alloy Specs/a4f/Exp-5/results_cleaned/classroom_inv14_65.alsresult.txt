//Fixed code without any additional explanation

sig Person  {
    Tutors : set Person,
    Teaches : set Class
}

sig Group {}

sig Class  {
    Groups : Person -> Group
}

sig Teacher extends Person  {}

sig Student extends Person  {}

pred inv1 {
    Student in Person 
}

pred inv2 {
    no Teacher 
}

pred inv3 {
    no Student & Teacher 
}

pred inv4 {
    Person in (Student + Teacher) 
}

pred inv5 {
    some Teacher.Teaches 
}

pred inv6 {
    all t:Teacher | t.Teaches in Class 
}

pred inv7 {
    all c:Class | some Teacher & c.Teaches 
}

pred inv8 {
    all t:Teacher | lone t.Teaches 
}

pred inv9 {
    all c:Class | lone (Teaches.c & Teacher) 
}

pred inv10 {
    all c:Class, s:Student | some c.Groups.s 
}

pred inv11 {
    all c : Class | (some c.Groups) implies some Teacher & c.Teaches 
}

pred inv12 {
    all t : Teacher | some (t.Teaches).Groups 
}

pred inv13 {
    Teacher.Tutors in Teacher and Student.Tutors in Teacher 
}

pred inv14 {
    all s : Person, c : Class, t : Teacher, g : Group | (c -> s -> g in Groups) and t -> c in Teaches implies t -> s in Tutors 
}

pred inv15 {
    all s : Person | some Teacher & ^Tutors.s
}

run inv1 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv2 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv3 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv4 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv5 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv6 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv7 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv8 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv9 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv10 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv11 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv12 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv13 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv14 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
run inv15 for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group

// Check if repaired assertions hold
assert inv1_Repaired {
    inv1[] iff Person in Student
}

assert inv2_Repaired { 
    inv2[] iff no Teacher 
}

assert inv3_Repaired {
    inv3[] iff no Student & Teacher 
}

assert inv4_Repaired {
    inv4[] iff Person in (Student + Teacher) 
}

assert inv5_Repaired {
    inv5[] iff some Teacher.Teaches 
}

assert inv6_Repaired {
    inv6[] iff all t:Teacher | t.Teaches in Class 
}

assert inv7_Repaired {
    inv7[] iff all c:Class | some Teacher & c.Teaches 
}

assert inv8_Repaired {
    inv8[] iff all t:Teacher | lone t.Teaches 
}

assert inv9_Repaired {
    inv9[] iff all c:Class | lone (Teaches.c & Teacher) 
}

assert inv10_Repaired {
    inv10[] iff all c:Class, s:Student | some c.Groups.s 
}

assert inv11_Repaired {
    inv11[] iff all c : Class | (some c.Groups) implies some Teacher & c.Teaches 
}

assert inv12_Repaired {
    inv12[] iff all t : Teacher | some (t.Teaches).Groups 
}

assert inv13_Repaired {
    inv13[] iff Teacher.Tutors in Teacher and Student.Tutors in Teacher 
}

assert inv14_Repaired {
    inv14[] iff all s : Person, c : Class, t : Teacher, g : Group | (c -> s -> g in Groups) and t -> c in Teaches implies t -> s in Tutors 
}

assert inv15_Repaired {
    inv15[] iff all s : Person | some Teacher & ^Tutors.s 
}

check inv1_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv2_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv3_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv4_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv5_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv6_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv7_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv8_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv9_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv10_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv11_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv12_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv13_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv14_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group
check inv15_Repaired for 0 but exactly 5 Person, 5 Teacher, 5 Student, exactly 10 Class, exactly 5 Group