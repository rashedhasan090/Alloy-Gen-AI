The bug in the specification is in the inv4 predicate. The let statement within inv4 has an error in the definition of the set tr. 

The fixed Alloy specification is:

sig State {
        trans : Event -> State
}

sig Init in State {}

sig Event {}

pred inv1 {
    all s: State | some s.trans
}

pred inv2 {
    one Init
}

pred inv3 {
    all s : State, e : Event | lone e.(s.trans)
}

pred inv4 {
    let tr = { s1, s2 : State, e : Event | s1->e->s2 in trans } |
    State in Init.^tr
}

pred inv5 {
    all s:State, s1:State | s.trans.State = s1.trans.State
}

pred inv6 {
    all e:Event | some s1,s2:State | s1->e->s2 in trans
}

pred inv7 {
    let tr = { s1, s2 : State, e : Event | s1->e->s2 in trans } |
    all s : Init.^tr | some i : Init | i in s.^tr
}

// Check if inv1 can be repaired
pred inv1_OK {
    all s: State | some s.trans
}

assert inv1_Repaired {
    inv1[] iff inv1_OK[]
}

// Check if inv2 can be repaired
pred inv2_OK {
    one Init
}

assert inv2_Repaired {
    inv2[] iff inv2_OK[]
}

// Check if inv3 can be repaired
pred inv3_OK {
    all s : State, e : Event | lone e.(s.trans)
}

assert inv3_Repaired {
    inv3[] iff inv3_OK[]
}

// Check if inv4 can be repaired
pred inv4_OK {
    let tr = { s1, s2 : State, e : Event | s1->e->s2 in trans } |
    State in Init.^tr
}

assert inv4_Repaired {
    inv4[] iff inv4_OK[]
}

// Check if inv5 can be repaired
pred inv5_OK {
    all s:State, s1:State | s.trans.State = s1.trans.State
}

assert inv5_Repaired {
    inv5[] iff inv5_OK[]
}

// Check if inv7 can be repaired
pred inv7_OK {
    let tr = { s1, s2 : State, e : Event | s1->e->s2 in trans } |
    all s : Init.^tr | some i : Init | i in s.^tr
}

assert inv7_Repaired {
    inv7[] iff inv7_OK[]
}

// Perfect Oracle Commands
check inv1_Repaired expect 0
check inv2_Repaired expect 0
check inv3_Repaired expect 0
check inv4_Repaired expect 0
check inv5_Repaired expect 0
check inv7_Repaired expect 0

// Repair inv4 using pred and assert
pred repair_pred_1{
    inv4[] iff inv4_OK[]
}
run repair_pred_1

assert repair_assert_1{
    inv4[] iff inv4_OK[]
}
check repair_assert_1