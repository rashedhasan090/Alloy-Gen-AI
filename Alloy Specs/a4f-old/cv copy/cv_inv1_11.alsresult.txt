abstract sig Source {}
sig User extends Source {
    profile: set Work,
    visible: set Work
}
sig Institution extends Source {}
sig Id {}
sig Work {
    ids: some Id,
    source: one Source
}

pred inv1 {
    // The works publicly visible in a curriculum must be part of its profile
    all u: User | u.visible <= u.profile
}

pred inv2 {
    // A user profile can only have works added by himself or some external institution
    all u: User, w: Work | w in u.profile implies (u = w.source or some i: Institution | i = w.source)
}

pred inv3 {
    // The works added to a profile by a given source cannot have common identifiers
    all u: User, s: Institution | no disj w1, w2: Work |
        w1 + w2 in u.profile and w1.source = s and w2.source = s implies w1.ids & w2.ids = none
}

run {
    // Check all assertions after executing the pred repair_preds
    pred repair_preds {
        inv1[] iff inv1_repaired[],
        inv2[] iff inv2_repaired[],
        inv3[] iff inv3_repaired[]
    }

    check repair_preds
} for 5
```